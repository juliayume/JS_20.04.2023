
// 1. Resolva os passos a seguir
// a) Crie um objeto. Ele deve conter duas propriedades: nome (string) e lista de compras (um array que sempre ter√° exatamente tr√™s itens). Depois, escreva uma fun√ß√£o que recebe como entrada um objeto e imprime uma mensagem no modelo abaixo: 

// "Ol√°, nome. Hoje seus itens priorit√°rios na lista de comprar s√£o ___, ____ e ____"

// b) Agora, usando o operador spread, crie um novo objeto mantendo o valor da propriedade nome, mas com uma nova lista de itens. Depois, chame a fun√ß√£o feita no item anterior passando como argumento o novo objeto.

// 2. Resolva os passos a seguir: 
    
//     a) Crie dois objetos diferentes com as seguintes propriedades: nome, idade e profiss√£o. 
    
//     b) Escreva uma fun√ß√£o que receba esses objetos e retorne um array com as seguintes informa√ß√µes:
    
//     1. O valor de `nome`
//     2. O numero de caracteres do valor `nome`
//     3. O valor de `idade`
//     4. O valor de `profiss√£o`
//     5. O numero de caracteres do valor `profiss√£o`

// 3. Resolva os passos a seguir: 
    
//     a) Crie uma vari√°vel de escopo global que guarde um `array` vazio chamada `carrinho`
    
//     b) Crie tr√™s novos objetos que representem frutas de um sacol√£o. Eles devem ter as seguintes propriedades: nome (`string`) e disponibilidade (`boolean` - devem come√ßar como `true`)
    
//     c) Crie uma fun√ß√£o que **receba** um objeto fruta por **par√¢metro** e coloque-a dentro do array de `carrinho`. Invoque essa fun√ß√£o passando os tr√™s objetos criados. 
    
//     - üí°  Dica
        
//       Aqui voc√™ deve usar o m√©todo **push()**
        
//     d) Imprima a vari√°vel `carrinho` e garanta que ela agora seja um **array preenchido com tr√™s objetos.**

// Crie um fun√ß√£o que pergunte ao usu√°rio seu nome, sua idade e sua profiss√£o e depois imprima no console um objeto com essas propriedades. Depois de imprimir o novo objeto, imprima tamb√©m o tipo dele para garantir que √© um objeto.

